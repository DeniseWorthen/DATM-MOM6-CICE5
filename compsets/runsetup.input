# Setups for various run types
########################################################################
# coldstart
#########################################################################

embed bash coldstart(RUNDIR,modules,DATM_INPUT,CNTL) [[[
        rm -rf "$RUNDIR"
        mkdir -p "$RUNDIR" "$CNTL"
        cd @[RUNDIR]

        set +e

        source @[plat%SRCnems]/conf/module-setup.sh.inc
        module purge
        module use $( dirname $modules )
        module load $( basename $modules )

        mkdir RESTART INPUT 
        #For MOM6
        mkdir MOM6_RESTART MOM6_OUTPUT
        #For CICE
        mkdir history
        mkdir restart
        #For DATM
        mkdir DATM_INPUT
        ln -s $DATM_INPUT/* DATM_INPUT/

        export MPI_TYPE_DEPTH=20
        export OMP_STACKSIZE=512M
        export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4

	# Set the stack limit as high as we can.
        if [[ $( ulimit -s ) != unlimited ]] ; then
	    for try_limit in 20000 18000 12000 9000 6000 3000 1500 1000 800 ; do
	        if [[ ! ( $( ulimit -s ) -gt $(( try_limit * 1000 )) ) ]] ; then
		    ulimit -s $(( try_limit * 1000 ))
	    else
		    break
	        fi
	    done
        fi

	ulimit -a
]]]
########################################################################
# restart from coldstart
#########################################################################

embed bash restart_from_coldstart(RUNDIR,modules,DATM_INPUT,CNTL,RESTART_DIR) [[[

   rm -rf "$RUNDIR"
   mkdir -p "$RUNDIR" "$CNTL"
   cd @[RUNDIR]

   set +e

   source @[plat%SRCnems]/conf/module-setup.sh.inc
   module purge
   module use $( dirname $modules )
   module load $( basename $modules )

   mkdir RESTART INPUT
   #For MOM6
   mkdir MOM6_RESTART MOM6_OUTPUT
   #For CICE
   mkdir history
   mkdir restart
   #For DATM
   mkdir DATM_INPUT
   ln -s $DATM_INPUT/* DATM_INPUT/

   #For Mediator
   cp -f $RESTART_DIR/mediator*restart* $RUNDIR

   export MPI_TYPE_DEPTH=20
   export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4
   export OMP_STACKSIZE=512M

    # Set the stack limit as high as we can.
        if [[ $( ulimit -s ) != unlimited ]] ; then
            for try_limit in 20000 18000 12000 9000 6000 3000 1500 1000 800 ; do
                if [[ ! ( $( ulimit -s ) -gt $(( try_limit * 1000 )) ) ]] ; then
                    ulimit -s $(( try_limit * 1000 ))
                else
                    break
                fi
            done
        fi
        ulimit -a
]]]
########################################################################
#
###########################################################################

embed bash edit_ice_in(CDATE,DT_CICE,RUNTYPE,DUMPFREQ_N,DUMPFREQ) [[[

python <<EOT
import os
import datetime

fmt='%Y%m%d%H'
dt = datetime.datetime.strptime("@[CDATE]", fmt)
tt = dt.timetuple()

jday=tt.tm_yday
year=tt.tm_year
istep0=(jday-1)*86400/int("@[DT_CICE]")

with open("ice_in_template",'rt') as inf:
 with open("ice_in",'wf') as outf:
   for x in inf.readlines():
    newline=x.replace('YEAR_INIT',str(year)) \
             .replace('ISTEP0',str(istep0)) \
             .replace('DT_CICE',"@[DT_CICE]") \
             .replace('RUNTYPE',"@[RUNTYPE]") \
             .replace('DUMPFREQ_N',"@[DUMPFREQ_N]") \
             .replace('DUMPFREQ',"@[DUMPFREQ]")
    outf.write(newline)

#dt = datetime.datetime.strptime("@[CDATE]", fmt)
#print('@[CDATE] becomes '+str(dt))
EOT

]]]
